version: '3.8'

x-template: &template
  networks:
    - gs
  env_file:
    - .env
  volumes:
    - .:/opt/app:delegated
  tmpfs:
    - /tmp
    - /tmp/php-opcache
  build:
    context: .
    dockerfile: build/local/Dockerfile
  image: base_image:8.1.9

services:
  web:
    <<: *template
    environment:
      - APP_NAME=web
    expose:
      - 9000
    container_name: gs_web

  message_consumer:
    <<: *template
    environment:
      - APP_NAME=message_consumer
    command: bin/console messenger:consume async
    depends_on:
      - web
      - rabbitmq
    container_name: gs_message_consumer
    networks:
      - gs

  db:
    image: postgres:14.5-alpine
    command: postgres -c shared_buffers=1GB -c wal_buffers=16MB -c work_mem=128MB -c maintenance_work_mem=256MB
    networks:
      - gs
    volumes:
      - ./var/postgres-data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    container_name: gs_db
    ports:
      - "5432:5432"

  webserver:
    networks:
      - gs
    image: nginx
    ports:
      - "80:80"
    depends_on:
      - web
      - db
      - swagger_ui
    volumes:
      - './build/local/nginx.conf:/etc/nginx/conf.d/default.conf'
      - './var/uploads:/usr/share/nginx/uploads'
      - './public:/opt/app/public'
    restart: always
    container_name: gs_webserver

  rabbitmq:
    image: rabbitmq:3.11.2-management-alpine
    container_name: gs_rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ./var/rabbitmq/data/:/var/lib/rabbitmq
      - ./var/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - gs

  swagger_ui:
    image: swaggerapi/swagger-ui
    container_name: gs_swagger
    environment:
      BASE_URL: '/api/doc'
      SWAGGER_JSON_URL: '/api/v1/doc.json'
    networks:
      - gs

  mailcatcher:
    image: sj26/mailcatcher:v0.8.2
    container_name: gs_mailcatcher
    ports:
      - "8880:1080"
    restart: always
    networks:
      - gs

networks:
  gs:
    driver: "bridge"
    driver_opts:
      com.docker.network.driver.mtu: 1400
